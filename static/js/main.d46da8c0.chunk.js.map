{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/HW1.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","msg","message__box","message__image","src","avatar","alt","message__inside","message__name","name","message__text","message","message__time","time","messageData","messageData3","HW1","bg","background","Affair","key","affair","_id","onClick","deleteAffairCallback","Affairs","mappedAffairs","data","map","a","setFilter","defaultAffairs","priority","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","s","value","onChange","GreetingContainer","users","addUserCallback","setName","length","e","currentTarget","alert","HW3","setUsers","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","blue","disabled","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.d46da8c0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message__box\":\"Message_message__box__1NCU-\",\"message__image\":\"Message_message__image__2xJfe\",\"message__inside\":\"Message_message__inside__1RvOl\",\"message__name\":\"Message_message__name__8MHnD\",\"message__text\":\"Message_message__text__1pryX\",\"message__time\":\"Message_message__time__eW6KA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2Bq3o\",\"errorInput\":\"SuperInputText_errorInput__1RoZJ\",\"error\":\"SuperInputText_error__3MRgy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__30E3y\",\"column\":\"HW4_column__1vDNR\",\"testSpanError\":\"HW4_testSpanError__3T_yo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__fKTTg\",\"red\":\"SuperButton_red__Mn16N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__271og\",\"spanClassName\":\"SuperCheckbox_spanClassName__3S0VF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2-REJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"HW1_background__3WGxN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__32qN1\",\"error\":\"Greeting_error__3ASIu\"};","import React from 'react'\nimport msg from './Message.module.css'\n\ntype MessagePropsType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\nfunction Message(props: MessagePropsType) {\n    return (\n        <div>\n            <div className={msg.message__box}>\n                <img className={msg.message__image} src={props.avatar} alt=\"avatar\"/>\n                <div>\n                    <div className={msg.message__inside}>\n                        <span className={msg.message__name}>{props.name}</span>\n                        <div className={msg.message__text}>\n                            <p>{props.message}</p>\n                        </div>\n                        <span className={msg.message__time}>{props.time}</span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from \"./Message\";\nimport bg from \"./HW1.module.css\";\n\n\nconst messageData = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'wvv',\n    message: 'some dasdddddddddddd4233568793    469yt7890   g394y97 3hg9v83dddddddddtext',\n    time: '22:00',\n}\nconst messageData3 = {\n    avatar: 'https://i.pinimg.com/564x/34/d4/0a/34d40a6d3b181f070c081c21e628cce2.jpg',\n    name: 'nevermore',\n    message: 'Lorem Ipsum is simply dummy text of the printing and typesetting indusook a galley of type and scrambled it to make a type specimen book.',\n    time: '23:01',\n}\n\nfunction HW1() {\n    return (\n        <div className={bg.background}>\n            <hr/>\n            homeworks 1\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n            <Message\n                avatar={messageData3.avatar}\n                name={messageData3.name}\n                message={messageData3.message}\n                time={messageData3.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport {AffairType} from \"./HW2\";\n\ntype AffairPropsType = {\n    affair: AffairType\n    deleteAffairCallback: (_id: AffairType) => void\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {props.deleteAffairCallback(props.affair)} // ???\n\n    return (\n        <div>\n            <span key={props.affair._id}>{props.affair.name}</span>\n            <button onClick={deleteCallback}>X</button>\n        </div>\n    )\n}\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType} from './HW2'\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: any\n    deleteAffairCallback: (_id: AffairType) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {props.setFilter(\"all\")} // need to fix\n    const setHigh = () => {{props.setFilter(\"high\")}}\n    const setMiddle = () => {{props.setFilter(\"middle\")}}\n    const setLow = () => {{props.setFilter(\"low\")}}\n\n    return (\n        <div>\n\n            {mappedAffairs}\n\n            <button onClick={setAll}>All</button>\n            <button onClick={setHigh}>High</button>\n            <button onClick={setMiddle}>Middle</button>\n            <button onClick={setLow}>Low</button>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\nimport affair from \"./Affair\";\n\n// types\nexport type AffairPriorityType = \"low\" |\"middle\" | \"high\"\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: FilterType\n}\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: Array<AffairType> = [\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\n    if(filter === \"high\") {\n        return affairs.filter((affair) => affair.priority === \"high\" )\n    }else if(filter === \"middle\"){\n        return affairs.filter((affair) => affair.priority === \"middle\" )\n    }else if(filter === \"low\") {\n        return affairs.filter((affair) => affair.priority === \"low\" )\n    }else {\n        return affairs\n    }\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: AffairType) => {\n    return affairs.filter((affair) => {\n        return affair !== _id\n    })\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs)\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: AffairType) => setAffairs(deleteAffair(affairs, _id))\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React, {ChangeEvent} from 'react'\nimport s from './Greeting.module.css'\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\n    addUser: (name: string) => void // need to fix any\n    error: string // need to fix any\n    totalUsers: number // need to fix any\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n    const inputClass = error ? s.error : \"\" // need to fix with (?:)\n\n    return (\n        <div>\n            <input value={name} onChange={setNameCallback} className={inputClass}/>\n            <span>{error}</span>\n            <button onClick={() => addUser(name)}>add</button>\n            <span>{totalUsers}</span>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, FormEvent, useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType> // need to fix any\n    addUserCallback: (name: string) => void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<any>('') // need to fix any\n    const [error, setError] = useState<any>('') // need to fix any\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\n        setName(e.currentTarget.value) // need to fix\n    }\n\n    const addUser = (name: string) => {\n        addUserCallback(name)\n        alert(`Hello ${name}!`) // need to fix\n    }\n\n    const totalUsers = users.length // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport {v1} from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\n    const addUserCallback = (name: string) => { // need to fix any\\\n        setUsers([...users, {_id: v1(), name: name}]) // need to fix\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.errorInput} ${className ? className : '' }`  // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from '../../../p2-homeworks/h2/HW2'\nimport HW3 from '../../../p2-homeworks/h3/HW3'\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW5/>*/}\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}